type Question {
    questionId: String
    question: String
    choices: String
    answer: String
}

input InputQuestion {
    questionId: String
    question: String
    choices: String
    answer: String
}

type Mutation {
    createQuestion(inputQuestion: InputQuestion!): Question
}

type Query {
    question(questionId: String): Question
    questions(limit: Int): [Question]
}

type PageInfo {
    startCursor: String
    endCursor: String
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
}

type QuestionEdge {
    cursor: String!
    node: Question!
}

type QuestionConnection {
    edges: [QuestionEdge]
    pageInfo: PageInfo
}

type QuestionPages {
    pages(first: Int, after: String, last: Int, before: String): QuestionConnection
}
